"use strict";angular.module("animal-arena",["LocalStorageModule","ui.router"]).config(["localStorageServiceProvider","$stateProvider","$urlRouterProvider",function(a,n,r){r.otherwise("/"),n.state("arena",{url:"/arena",templateUrl:"scripts/partials/arena.html",controllerAs:"arena",controller:"ArenaCtrl"}).state("dashboard",{url:"/",templateUrl:"scripts/partials/dashboard.html",controllerAs:"dashboard",controller:"DashboardCtrl"}),a.setPrefix("animal-arena")}]),angular.module("exceptionOverride",[]).factory("$exceptionHandler",function(){return function(a,n){Bugsnag.notifyException(a,{diagnostics:{cause:n}})}}),angular.module("animal-arena").constant("ANIMALS_COLLECTION",[{name:"Silverback Gorilla",scientific:"Gorilla Beringei",id:"silverback_gorilla",stats:{ferocity:7,tenacity:9,land:7,water:2}},{name:"Leopard",scientific:"Panthera pardus",id:"leopard",stats:{ferocity:9,tenacity:5,land:9,water:2}},{name:"Anaconda",scientific:"Eunectes murinus",id:"anaconda",stats:{ferocity:8,tenacity:7,land:6,water:7}},{name:"Rhino",scientific:"Rhinocerotidae",id:"rhino",stats:{ferocity:8,tenacity:10,land:9,water:2}},{name:"Alligator",scientific:"Alligator mississippiensis",id:"alligator",stats:{ferocity:7,tenacity:7,land:6,water:8}}]),angular.module("animal-arena").constant("TERRAINS_COLLECTION",[{name:"Okavango Swamp",location:"Botswana",id:"swamp",stats:{land:4,water:8}},{name:"Namib Desert",location:"Namibia & Angola",id:"desert",stats:{land:10,water:0}},{name:"Amazon Jungle",location:"South America",id:"jungle",stats:{land:8,water:5}},{name:"Jiuzhaigou Valley",location:"China",id:"forest",stats:{land:9,water:4}}]),angular.module("animal-arena").controller("ArenaCtrl",["Arena","Animals","$timeout",function(a,n,r){function t(){r(function(){i.matchup=a.generateMatchup()},2e3)}var i=this;i.allAnimals=n.findAll(),i.selectAnimal=function(a){i.playerAnimal=a},i.isSelectedAnimal=function(a){return i.playerAnimal?i.playerAnimal.id===a.id:void 0},i.fightMatch=function(){i.matchWinner=a.determineWinner(i.playerAnimal,i.matchup.opponent,i.matchup.terrain)},i.resetMatch=function(){i.matchup=void 0,i.matchWinner=void 0,t()},t()}]),angular.module("animal-arena").controller("DashboardCtrl",["Arena","Animals","Terrains",function(a,n,r){var t=this;t.animals=n,t.playedMatches=a.getPlayedMatches().map(function(a){return{player:n.find(a.player),opponent:n.find(a.opponent),terrain:r.find(a.terrain),winner:a.winner}}),t.favoriteAnimals=a.getFavoriteAnimals()}]),angular.module("animal-arena").run(["$templateCache",function(a){a.put("scripts/partials/arena.html",'<div class="loader" ng-show="!arena.matchup">\r\n    Generating matchup...\r\n</div>\r\n<div ng-show="arena.matchup && !arena.matchWinner">\r\n    <div animal-card="arena.matchup.opponent"></div>\r\n    <div terrain-card="arena.matchup.terrain"></div>\r\n\r\n    <h3>Choose your animal:</h3>\r\n\r\n    <div animal-grid></div>\r\n\r\n    <div ng-show="arena.playerAnimal">\r\n        <p>\r\n            You are fighting as a {{ arena.playerAnimal.name }} against a {{ arena.matchup.opponent.name }} in {{ arena.matchup.terrain.name }}\r\n        </p>\r\n        <button ng-click="arena.fightMatch()">Fight match</button>\r\n    </div>\r\n</div>\r\n<div ng-show="arena.matchWinner">\r\n    <p ng-show="arena.matchWinner === \'player\'">You won!</p>\r\n    <p ng-show="arena.matchWinner === \'opponent\'">You lost!</p>\r\n    <p ng-show="arena.matchWinner === \'draw\'">Draw!</p>\r\n    <button ng-click="arena.resetMatch()">Play again</button>\r\n</div>'),a.put("scripts/partials/dashboard.html",'<h2>Previously played matches</h2>\r\n<ul>\r\n    <li ng-repeat="match in dashboard.playedMatches">\r\n        {{ match.player.name }} vs {{ match.opponent.name }} - {{ match.winner }}\r\n    </li>\r\n</ul>\r\n\r\n<div class="card">\r\n    <h2>Favorite animals</h2>\r\n    <ul class="avatar-list">\r\n        <li ng-repeat="(animal, count) in dashboard.favoriteAnimals">\r\n            <div class="avatar">\r\n                <img ng-src="images/{{ dashboard.animals.find(animal).id }}.png" class="avatar-image" alt="{{ dashboard.animals.find(animal).name }}"/>\r\n                <div class="avatar-content">\r\n                    <div class="avatar-title">\r\n                        {{ dashboard.animals.find(animal).name }}\r\n                    </div>\r\n                    <div class="avatar-subtitle">\r\n                        Played {{ count }} times\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</div>'),a.put("scripts/directives/animal-card/animal-card.html",'<div class="card animal">\r\n    <div class="photo">\r\n        <img ng-src="images/{{ animal.id }}.png" alt=""/>\r\n    </div>\r\n    <div class="name">{{ animal.name }}</div>\r\n    <ul class="stats">\r\n        <li>{{ animal.stats.ferocity }} ferocity</li>\r\n        <li>{{ animal.stats.tenacity }} tenacity</li>\r\n    </ul>\r\n</div>'),a.put("scripts/directives/animal-grid/animal-grid.html",'<ul class="animal-grid">\r\n    <li ng-repeat="animal in arena.allAnimals"\r\n        ng-click="arena.selectAnimal(animal)"\r\n        ng-class="{\'selected\': arena.isSelectedAnimal(animal)}">\r\n        {{ animal.name }}</li>\r\n</ul>'),a.put("scripts/directives/terrain-card/terrain-card.html",'<div class="card terrain">\r\n    <div class="photo">\r\n        <img ng-src="images/{{ terrain.id }}.png" alt=""/>\r\n    </div>\r\n    <div class="name">{{ terrain.name }}</div>\r\n    <ul class="stats">\r\n        <li>{{ terrain.stats.land }} land</li>\r\n        <li>{{ terrain.stats.water }} water</li>\r\n    </ul>\r\n</div>')}]),angular.module("animal-arena").service("Animals",["ANIMALS_COLLECTION",function(a){var n=this;n.findAll=function(){return a},n.find=function(n){for(var r=0;r<a.length;r++){var t=a[r];if(t.id===n)return t}return void 0},n.getRandomAnimal=function(){return a[Math.floor(Math.random()*a.length)]}}]),angular.module("animal-arena").service("Arena",["Animals","Terrains","Storage",function(a,n,r){var t=this,i=r.load("matches")||[],e=r.load("favorites")||{},l={ferocity:1,tenacity:.8};t.getPlayedMatches=function(){return i},t.getFavoriteAnimals=function(){return e},t.generateMatchup=function(){var r=a.getRandomAnimal(),t=n.getRandomTerrain();return{opponent:r,terrain:t}},t.calculateCombatScore=function(a){return(a.stats.ferocity*l.ferocity+a.stats.tenacity*l.tenacity)/2},t.calculateTerrainInfuence=function(a,n){var r=a.stats.land*(n.stats.land/10),t=a.stats.water*(n.stats.water/10);return(r+t)/20},t.calculateTotalScore=function(a,n){var r=t.calculateCombatScore(a),i=t.calculateTerrainInfuence(a,n);return r*i},t.determineWinner=function(a,n,l){var c,s=t.calculateTotalScore(a,l),o=t.calculateTotalScore(n,l);return c=s===o?"draw":s>o?"player":"opponent",i.push({player:a.id,opponent:n.id,terrain:l.id,winner:c}),e[a.id]?e[a.id]++:e[a.id]=1,r.save("matches",i),r.save("favorites",e),c}}]),angular.module("animal-arena").service("Storage",["localStorageService",function(a){var n=this;n.save=function(n,r){a.set(n,r)},n.load=function(n){return a.get(n)}}]),angular.module("animal-arena").service("Terrains",["TERRAINS_COLLECTION",function(a){var n=this;n.findAll=function(){return a},n.find=function(n){for(var r=0;r<a.length;r++){var t=a[r];if(t.id===n)return t}return void 0},n.getRandomTerrain=function(){return a[Math.floor(Math.random()*a.length)]}}]),angular.module("animal-arena").directive("animalCard",function(){return{restrict:"EA",scope:{animal:"=animalCard"},templateUrl:"scripts/directives/animal-card/animal-card.html"}}),angular.module("animal-arena").directive("animalGrid",function(){return{restrict:"EA",templateUrl:"scripts/directives/animal-grid/animal-grid.html"}}),angular.module("animal-arena").directive("terrainCard",function(){return{restrict:"EA",scope:{terrain:"=terrainCard"},templateUrl:"scripts/directives/terrain-card/terrain-card.html"}});